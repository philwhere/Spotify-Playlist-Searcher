@model Spotify.Models.PlaylistsResponse

@{
    ViewData["Title"] = "PlaylistSearch";
}

<h2>Playlist Search</h2>

<div>
    <h4>@Html.DisplayFor(model => model.href)</h4>
    <hr />
    <div class="row">
        @*<div class="col-lg-6">
            <div class="input-group">
                <input id="searchbar" class="form-control" aria-label="Text input with multiple buttons">
                <div class="input-group-btn">
                    <button id="goArtist" type="button" class="btn btn-default">
                        Artist
                    </button>
                    <button id="goSong" type="button" class="btn btn-default">
                        Song
                    </button>
                </div>
            </div>
        </div>*@
        <div class="col-lg-6">
            <div class="input-group">
                <input id="searchbar" type="text" class="form-control" aria-label="...">
                <div class="input-group-btn">
                    <button id="selectedSearchOption" type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">All <span class="caret"></span></button>
                    <ul id="searchOptions" class="dropdown-menu dropdown-menu-right">
                        <li><a href="#">All</a></li>
                        <li><a href="#">Song</a></li>
                        <li><a href="#">Artist</a></li>
                    </ul>
                </div><!-- /btn-group -->
            </div><!-- /input-group -->
        </div><!-- /.col-lg-6 -->
    </div>
    <hr />
    @*<dl id="resultsContainer" class="dl-horizontal"></dl>*@
    <div id="tablePanel" class="panel panel-default">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="text-center">Playlist</th>
                    <th>Artist</th>
                    <th>Track</th>
                </tr>
            </thead>
            <tbody id="tableBody"></tbody>
        </table>
    </div>
</div>
<div>
    @*@Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
        <a asp-action="Index">Back to List</a>*@
</div>


@section scripts {
    <script>
        var spotifyPlaylists = @Html.Raw(Json.Serialize(Model.items));

        function ShowResults(matches, query) {
            //$("#resultsContainer").empty();
            $("#tableBody").empty();
            $(matches).each(function (i, p) {
                //$("#resultsContainer").append(`<dt>${p.name}</dt>`);
                var row = `<tr>
                            <td class="text-center">${p.name}</td>`;

                var songs = this.songs.items;
                songs = songs.filter(s => PartialMatchName(s.track.name, query) || PartialMatchName(s.track.artistsString, query));

                var artists = ""
                var tracks = "";

                $(songs).each(function (i, s) {
                    //$("#resultsContainer").append(`<dd>${s.track.artistsString} - ${s.track.name}</dd>`);
                    artists += `<p>${s.track.artistsString}</p>`;
                    tracks += `<p>${s.track.name}</p>`;
                    //$("#tableBody").append(
                    //    `<tr>
                    //        <td class="text-center">${p.name}</td>
                    //        <td class="text-center">${s.track.artistsString}</td>
                    //        <td class="text-center">${s.track.name}</td>
                    //    </tr>`);
                });
                row += `<td>${artists}</td>
                        <td>${tracks}</td>
                    </tr>`
                $("#tableBody").append(row);
                //$("#resultsContainer").append("<hr />");
            });

            if (matches.length > 0)
                $("#tablePanel").show();
        }

        $("#goSong").click(function () {
            var query = $("#searchbar").val();
            var matches = spotifyPlaylists
                .filter(p => p.songs.items
                    .find(s => PartialMatchName(s.track.name, query)));
            ShowResults(matches, query);
        });

        $("#goArtist").click(function () {
            var query = $("#searchbar").val();
            var matches = spotifyPlaylists
                .filter(p => p.songs.items
                    .find(s => PartialMatchName(s.track.artistsString, query)));
            ShowResults(matches, query);
        });


        $("#searchbar").keyup(function () {
            var query = $(this).val();
            var matches = spotifyPlaylists
                .filter(p => p.songs.items
                    .find(s => GetMatch(s.track, query)));
            ShowResults(matches, query);
        });

        function GetMatch(track, query) {
            if ($("#selectedSearchOption").text().includes("Song"))
                return PartialMatchName(track.name, query)

            if ($("#selectedSearchOption").text().includes("Artist"))
                return PartialMatchName(track.artistsString, query)

            return PartialMatchName(track.name, query) || PartialMatchName(track.artistsString, query);
        }

        function PartialMatchName(name, queriedTrackName) {
            return name.toLowerCase().includes(queriedTrackName.toLowerCase().trim());
        }

        $("#searchOptions li").click(function () {
            $("#selectedSearchOption").html(`${$(this).text()} <span class="caret"></span>`);
        });


        $(document).ready(function () {
            $("#tablePanel").hide();
        });
    </script>
}